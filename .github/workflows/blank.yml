name: CI
on:
  push:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        default: 'true'
        type: boolean
      string:
        description: 'strang'
        default: 'false'
        type: string
env:
  test1: test1
  test2: test2

jobs:
  shell:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: geph-official/geph4-client
          ref: v1.0.0
      - name: test git describe
        run: git describe --tags
      - name: test if
#        if: $[[ inputs.string == *test ]]
        run: echo match!
      - name: test env and gh and curl and jq
        env:
          UPSTREAM_FULL_NAME: $(gh api repos/${GITHUB_REPOSITORY} --jq '.parent.full_name')
        run: |
          echo ${UPSTREAM_FULL_NAME}
          # gh api repos/${GITHUB_REPOSITORY} --jq '.parent.full_name'
          curl https://api.github.com/repos/touhoured/geph4-client | jq -r '.parent.full_name' | xargs echo full name: 
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYYMMDD
      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          YEAR: "${{ steps.current-time.outputs.year }}"
          DAY: "${{ steps.current-time.outputs.day }}"
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY
      - name: Get tag
        id: tag
        uses: JinoArch/get-latest-tag@latest
      - name: Show tag
        env:
          latest: ${{ steps.tag.outputs.latestTag }}
          previous: ${{ steps.jinos.outputs.previousTag }}
        run: echo $latest $previous

  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}

  matrixTest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
    steps:
      - name: test Android NDK
        if: matrix.os == 'ubuntu-latest'
        run: |
          set
          echo ------------------------
          export
      - name: test Android NDK 2
        if: matrix.os == 'windows-latest'
        run: |
          Get-ChildItem Env:
          echo ------------------------
          Get-Variable
      - uses: actions/checkout@v3
      - name: test git
        run: |
          pwd
          echo "tag_name=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
        shell: bash

      - name: show tag
        env:
          tag: ${{ env.tag_name }}
        run: echo $tag
    

  build-windows:
    name: build-windows-${{ matrix.target }}
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - i686-pc-windows-msvc
          - i686-pc-windows-gnu

    steps:
      - name: test
        run: echo done
  build-linux:
    name: build-linux-${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - aarch64-linux-android
        include:
          - target: aarch64-unknown-linux-musl
            use-cross: true

          - target: aarch64-linux-android
            use-cross: true
    steps:
      - name: test
        run: echo done
